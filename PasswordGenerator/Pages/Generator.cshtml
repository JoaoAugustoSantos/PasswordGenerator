@page
@model PasswordGenerator.Pages.GeneratorModel
@{
    ViewData["Title"] = "Password Generator";
}

<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="utf-8" />
    <title>Password Generator</title>
    <style>
        * {
            box-sizing: border-box;
        }

        body {
            background: linear-gradient(135deg, #1b1b1b, #2c2c2c);
            color: #e0e0e0;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
        }

        .container {
            width: 100%;
            max-width: 550px;
            background-color: #1f1f1f;
            padding: 35px 30px;
            border-radius: 18px;
            box-shadow: 0 12px 30px rgba(0,0,0,0.6);
            position: relative;
        }

        h1 {
            text-align: center;
            margin-bottom: 30px;
            font-size: 28px;
            font-weight: 600;
            color: #f5f5f5;
        }

        .error-message {
            color: #f44336;
            font-weight: bold;
            margin-bottom: 12px;
            text-align: center;
        }

        .password-field {
            display: flex;
            align-items: center;
            margin-bottom: 25px;
            position: relative;
        }

        input[type="text"] {
            flex: 1;
            padding: 14px 18px;
            border: none;
            border-radius: 10px;
            background-color: #2e2e2e;
            color: #fff;
            font-size: 18px;
            box-shadow: inset 0 2px 6px rgba(0,0,0,0.6);
        }

        .copy-btn {
            margin-left: 12px;
            padding: 0 18px;
            height: 48px;
            border: none;
            border-radius: 10px;
            background-color: #4caf50;
            color: white;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 20px;
            transition: all 0.2s ease;
            box-shadow: 0 5px 12px rgba(0,0,0,0.5);
        }

            .copy-btn:hover {
                transform: translateY(-2px);
                box-shadow: 0 7px 18px rgba(0,0,0,0.6);
            }

        .tooltip-text {
            opacity: 0;
            position: absolute;
            background-color: #2196f3;
            color: #fff;
            padding: 5px 12px;
            border-radius: 6px;
            font-size: 14px;
            top: -40px;
            right: 0;
            pointer-events: none;
            transition: opacity 0.3s ease, transform 0.3s ease;
            transform: translateY(10px);
        }

            .tooltip-text.show {
                opacity: 1;
                transform: translateY(0);
            }

        .options {
            margin-bottom: 25px;
        }

            .options label {
                display: flex;
                align-items: center;
                margin-bottom: 14px;
                font-size: 16px;
            }

            .options input[type="checkbox"] {
                -webkit-appearance: none;
                -moz-appearance: none;
                appearance: none;
                width: 22px;
                height: 22px;
                border: 2px solid #555;
                border-radius: 5px;
                background-color: #2a2a2a;
                cursor: pointer;
                position: relative;
                transition: all 0.2s ease;
                margin-right: 10px;
            }

                .options input[type="checkbox"]:checked {
                    background-color: #2196f3;
                    border-color: #2196f3;
                }

                    .options input[type="checkbox"]:checked::after {
                        content: '✔';
                        position: absolute;
                        top: 0;
                        left: 3px;
                        font-size: 16px;
                        color: white;
                    }

        input[type="range"] {
            -webkit-appearance: none;
            width: 100%;
            height: 10px;
            border-radius: 5px;
            background: #333;
            outline: none;
            margin-bottom: 12px;
        }

            input[type="range"]::-webkit-slider-thumb {
                -webkit-appearance: none;
                appearance: none;
                width: 24px;
                height: 24px;
                border-radius: 50%;
                background: #2196f3;
                cursor: pointer;
                box-shadow: 0 4px 8px rgba(0,0,0,0.6);
                transition: all 0.2s ease;
            }

                input[type="range"]::-webkit-slider-thumb:hover {
                    transform: scale(1.2);
                }

        .range-value {
            text-align: right;
            font-weight: bold;
            margin-bottom: 12px;
            color: #fff;
            font-size: 16px;
        }

        .generate-btn {
            width: 100%;
            padding: 16px;
            background-color: #2196f3;
            color: white;
            border: none;
            border-radius: 12px;
            cursor: pointer;
            font-size: 18px;
            font-weight: 600;
            box-shadow: 0 6px 18px rgba(0,0,0,0.5);
            transition: all 0.2s ease;
        }

            .generate-btn:hover {
                background-color: #1976d2;
                transform: translateY(-2px);
                box-shadow: 0 8px 22px rgba(0,0,0,0.6);
            }
    </style>
</head>
<body>
    <div class="container">
        <h1>Password Generator</h1>

        <form method="post">

            @if (!string.IsNullOrEmpty(Model.ErrorMessage))
            {
                <div class="error-message">@Model.ErrorMessage</div>
            }

            <div class="password-field">
                <input type="text" id="generatedPassword" readonly value="@Model.GeneratedPassword" />
                <button type="button" class="copy-btn" onclick="copyPassword()">📋</button>
                <span id="copyTooltip" class="tooltip-text">Copied!</span>
            </div>

            <div class="options">
                <label for="passwordSize">Quantidade de caracteres: <span id="rangeValue">@Model.PasswordSize</span></label>
                <input type="range" id="passwordSize" asp-for="PasswordSize" min="8" max="20" value="@Model.PasswordSize"
                       oninput="document.getElementById('rangeValue').innerText = this.value" />

                <label>
                    <input type="checkbox" asp-for="IncludeNumbers" /> Incluir números
                </label>
                <label>
                    <input type="checkbox" asp-for="IncludeLowercase" /> Incluir letras minúsculas
                </label>
                <label>
                    <input type="checkbox" asp-for="IncludeUppercase" /> Incluir letras maiúsculas
                </label>
                <label>
                    <input type="checkbox" asp-for="IncludeSpecial" /> Incluir caracteres especiais
                </label>
            </div>

            <button type="submit" class="generate-btn">Gerar senha</button>
        </form>
    </div>

    <script>
        function copyPassword() {
            const passwordField = document.getElementById("generatedPassword");
            passwordField.select();
            passwordField.setSelectionRange(0, 99999);
            document.execCommand("copy");

            const tooltip = document.getElementById("copyTooltip");
            tooltip.classList.add("show");

            setTimeout(() => {
                tooltip.classList.remove("show");
            }, 1500);
        }
    </script>
</body>
</html>
